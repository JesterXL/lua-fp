local collection = require './src/collection'

describe("src/collection.lua", function()
    describe('length', function()
        it('should give 3 for a table of 3', function()
            assert.are.equals(3, collection.length({1, 2, 3}))
        end)
        it('should give 0 for a table of 0', function()
            assert.are.equals(0, collection.length({}))
        end)
        it('should give 0 for a cow', function()
            assert.are.equals(0, collection.length('cow'))
        end)
    end)
    describe('map', function()
        it('should give cow for raw', function()
            local result = collection.map(function() return 'cow' end)({'raw'})
            assert.are.same({'cow'}, result)
        end)
        it('should not give chicken for raw', function()
            local result = collection.map(function() return 'cow' end)({'raw'})
            assert.are_not.same({'chicken'}, result)
        end)
        it('should add nums for map ones', function()
            local add1 = function(i) return i + 1 end
            local result = collection.map(add1)({1, 2, 3})
            assert.are.same({2, 3, 4}, result)
        end)
    end)
end)